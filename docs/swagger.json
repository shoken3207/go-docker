{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "このapiは、ビジターゴーのAPIで、ユーザー、スタジアム、遠征記録、などについて扱います。",
        "title": "ビジターゴーAPI",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/auth/emailVerification/{email}": {
            "get": {
                "description": "リクエストからメールアドレス取得後、tokenTypeに応じてチェックし、メールアドレス宛にtokenを含めた画面URLをメールで送信",
                "tags": [
                    "auth"
                ],
                "summary": "メールアドレスの本人確認",
                "parameters": [
                    {
                        "type": "string",
                        "description": "メールアドレス",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "トークンタイプ register or reset",
                        "name": "tokenType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "メールアドレスとパスワードが合致したら、jwtトークンをクライアントに返却",
                "tags": [
                    "auth"
                ],
                "summary": "ログイン",
                "parameters": [
                    {
                        "description": "ログイン情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-auth_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "メールアドレス確認後にリクエスト内容をユーザーテーブルに保存",
                "tags": [
                    "auth"
                ],
                "summary": "ユーザー登録",
                "parameters": [
                    {
                        "description": "ユーザー情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/resetPass": {
            "put": {
                "description": "メール内リンクで本人確認後、トークンと新しいパスワードをリクエストで取得し、パスワードを更新する",
                "tags": [
                    "auth"
                ],
                "summary": "ログアウト状態からパスワードを変更",
                "parameters": [
                    {
                        "description": "tokenと新しいパスワード",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPassRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/updatePass/{userId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "現在のパスワードと新しいパスワードをリクエストで取得し、現在のパスワードが合致したら、新しいパスワードに更新する",
                "tags": [
                    "auth"
                ],
                "summary": "ログイン状態からパスワードを変更",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "メールアドレス",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UpdatePassRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/expedition/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "遠征、出費、試合、訪れた施設の情報を保存する。",
                "tags": [
                    "expedition"
                ],
                "summary": "遠征記録を作成",
                "parameters": [
                    {
                        "description": "遠征記録作成リクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expedition.CreateExpeditionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "403": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/expedition/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "pathのidをもとに遠征記録を削除する。",
                "tags": [
                    "expedition"
                ],
                "summary": "遠征記録を削除",
                "responses": {
                    "200": {
                        "description": "アップロードした画像のURL",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "403": {
                        "description": "ユーザーが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "ユーザーが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "ユーザーが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/expedition/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "遠征、出費、試合、訪れた施設の情報を更新する。",
                "tags": [
                    "expedition"
                ],
                "summary": "遠征記録を更新",
                "parameters": [
                    {
                        "description": "遠征記録更新リクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expedition.UpdateExpeditionRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "403": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "ユーザーが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/sample/helloWorld": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "サンプルAPI",
                "responses": {}
            }
        },
        "/api/sample/protectedHelloWorld": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "sample"
                ],
                "summary": "サンプルAPI",
                "responses": {}
            }
        },
        "/api/upload/images": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "画像をアップロードし、URLを返します。\u003cbr\u003eプロフィール、スタジアム、遠征など、格納フォルダを指定してください。\u003cbr\u003e画像は1枚から10枚アップロードできるが、Swagger UIでは1つしか選択できません。\u003cbr\u003eファイルの拡張子は、[\".jpg\", \".jpeg\", \".png\"]だけを受け付けています。ファイルサイズは最大5MBを上限としています。",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "upload"
                ],
                "summary": "画像をクラウドストレージ(imagekit)にアップロード",
                "parameters": [
                    {
                        "type": "string",
                        "description": "格納フォルダ",
                        "name": "folder",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "画像ファイル",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-upload_UploadImagesResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/user/isUnique/{username}": {
            "get": {
                "description": "リクエストと同じuserNameが登録済みかチェックする",
                "tags": [
                    "user"
                ],
                "summary": "ユーザーネームの重複チェック",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "一意かのフラグ",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-user_IsUniqueUsernameResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/user/logined": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ヘッダーのトークンからユーザーを取得する",
                "tags": [
                    "user"
                ],
                "summary": "ログイン済みの場合、ログインユーザーの情報を取得",
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-user_UserResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/user/update/{userId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "userIdが同じユーザーの情報を変更する",
                "tags": [
                    "user"
                ],
                "summary": "ユーザー情報変更",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "userId",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ユーザー情報",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-user_UserResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/user/userId/{userId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "userIdからユーザーを1人取得",
                "tags": [
                    "user"
                ],
                "summary": "userIdからユーザー情報取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "userId",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ユーザー情報",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-user_UserResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        },
        "/api/user/username/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "usernameからユーザーを1人取得",
                "tags": [
                    "user"
                ],
                "summary": "usernameからユーザー情報取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ユーザー情報",
                        "schema": {
                            "$ref": "#/definitions/utils.ApiResponse-user_UserResponse"
                        }
                    },
                    "400": {
                        "description": "リクエストエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "404": {
                        "description": "not foundエラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    },
                    "500": {
                        "description": "内部エラー",
                        "schema": {
                            "$ref": "#/definitions/utils.BasicResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "token",
                "username"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                },
                "profileImage": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                }
            }
        },
        "auth.ResetPassRequest": {
            "type": "object",
            "required": [
                "afterPassword",
                "token"
            ],
            "properties": {
                "afterPassword": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.UpdatePassRequestBody": {
            "type": "object",
            "required": [
                "afterPassword",
                "beforePassword"
            ],
            "properties": {
                "afterPassword": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                },
                "beforePassword": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 6
                }
            }
        },
        "expedition.CreateExpeditionRequest": {
            "type": "object",
            "required": [
                "endDate",
                "games",
                "isPublic",
                "memo",
                "payments",
                "sportId",
                "stadiumId",
                "startDate",
                "title",
                "visitedFacilities"
            ],
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.GameRequest"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isPublic": {
                    "type": "boolean"
                },
                "memo": {
                    "type": "string"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.PaymentRequest"
                    }
                },
                "sportId": {
                    "type": "integer"
                },
                "stadiumId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "visitedFacilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.VisitedFacilityRequest"
                    }
                }
            }
        },
        "expedition.GameRequest": {
            "type": "object",
            "required": [
                "comment",
                "date",
                "scores",
                "team1Id",
                "team2Id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.GameScoreRequest"
                    }
                },
                "team1Id": {
                    "type": "integer"
                },
                "team2Id": {
                    "type": "integer"
                }
            }
        },
        "expedition.GameScoreRequest": {
            "type": "object",
            "required": [
                "order",
                "score",
                "teamId"
            ],
            "properties": {
                "order": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "teamId": {
                    "type": "integer"
                }
            }
        },
        "expedition.PaymentRequest": {
            "type": "object",
            "required": [
                "cost",
                "date",
                "title"
            ],
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "expedition.UpdateExpeditionImagesRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "expedition.UpdateExpeditionRequestBody": {
            "type": "object",
            "required": [
                "endDate",
                "games",
                "id",
                "isPublic",
                "memo",
                "payments",
                "sportId",
                "stadiumId",
                "startDate",
                "title",
                "visitedFacilities"
            ],
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "games": {
                    "$ref": "#/definitions/expedition.UpdateGamesRequest"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "$ref": "#/definitions/expedition.UpdateExpeditionImagesRequest"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "memo": {
                    "type": "string"
                },
                "payments": {
                    "$ref": "#/definitions/expedition.UpdatePaymentsRequest"
                },
                "sportId": {
                    "type": "integer"
                },
                "stadiumId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "visitedFacilities": {
                    "$ref": "#/definitions/expedition.UpdateVisitedFacilitiesRequest"
                }
            }
        },
        "expedition.UpdateGameRequest": {
            "type": "object",
            "required": [
                "comment",
                "date",
                "id",
                "scores",
                "team1Id",
                "team2Id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "scores": {
                    "$ref": "#/definitions/expedition.UpdateGameScoresRequest"
                },
                "team1Id": {
                    "type": "integer"
                },
                "team2Id": {
                    "type": "integer"
                }
            }
        },
        "expedition.UpdateGameScoreRequest": {
            "type": "object",
            "required": [
                "id",
                "order",
                "score",
                "teamId"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "teamId": {
                    "type": "integer"
                }
            }
        },
        "expedition.UpdateGameScoresRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.GameScoreRequest"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.UpdateGameScoreRequest"
                    }
                }
            }
        },
        "expedition.UpdateGamesRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.GameRequest"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.UpdateGameRequest"
                    }
                }
            }
        },
        "expedition.UpdatePaymentRequest": {
            "type": "object",
            "required": [
                "cost",
                "date",
                "id",
                "title"
            ],
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "expedition.UpdatePaymentsRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.PaymentRequest"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.UpdatePaymentRequest"
                    }
                }
            }
        },
        "expedition.UpdateVisitedFacilitiesRequest": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.VisitedFacilityRequest"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "update": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/expedition.UpdateVisitedFacilityRequest"
                    }
                }
            }
        },
        "expedition.UpdateVisitedFacilityRequest": {
            "type": "object",
            "required": [
                "address",
                "color",
                "icon",
                "id",
                "latitude",
                "longitude",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "expedition.VisitedFacilityRequest": {
            "type": "object",
            "required": [
                "address",
                "color",
                "icon",
                "latitude",
                "longitude",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "upload.UploadImagesResponse": {
            "type": "object",
            "properties": {
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "user.IsUniqueUsernameResponse": {
            "type": "object",
            "properties": {
                "isUnique": {
                    "type": "boolean"
                }
            }
        },
        "user.UpdateUserRequestBody": {
            "type": "object",
            "required": [
                "description",
                "name",
                "profileImage"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profileImage": {
                    "type": "string"
                }
            }
        },
        "user.UserResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profileImage": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utils.ApiResponse-auth_LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.LoginResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.ApiResponse-upload_UploadImagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/upload.UploadImagesResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.ApiResponse-user_IsUniqueUsernameResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.IsUniqueUsernameResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.ApiResponse-user_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.UserResponse"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BasicResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}